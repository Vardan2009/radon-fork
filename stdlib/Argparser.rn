class Argparser {
    fun __constructor__(description) {
        this.description = description
        this.options = {
            "--help": "Show this help message and exit"
        }
    }

    fun add_option(option, description, is_flag = false) {
        this.options[option] = {"description": description, "is_flag": is_flag}
    }

    fun parse_arguments() {
        arguments = sys_args()
        parsed_args = {}
        current_option = null
        index = 1

        while index < arr_len(arguments) {
            argument = arguments[index]

            if current_option != null {
                parsed_args[current_option] = argument
                current_option = null
            }
            elif argument in this.options {
                current_option = argument
            }
            else {
                print("Unknown argument: " + argument)
                return
            }

            nonlocal index++
        }

        return parsed_args
    }

    fun print_help() {
        print("Usage:" + sys_args()[0])
        print(this.description)
        print("Options:")
        for option, data in this.options {
            print("  " + option + ": " + data["description"])
        }
    }
}

#!
argparser = Argparser("This is a simple argparser")
argparser.add_option("--name", "Name of the user")
argparser.add_option("--age", "Age of the user")
argparser.add_option("--is-admin", "Is the user an admin", is_flag=true)

args = argparser.parse_arguments()
if "--help" in args {
    argparser.print_help()
} else {
    print(args)
}
!#